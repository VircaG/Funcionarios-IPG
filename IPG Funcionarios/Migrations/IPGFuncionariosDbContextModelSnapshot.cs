// <auto-generated />
using System;
using IPG_Funcionarios.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IPG_Funcionarios.Migrations
{
    [DbContext(typeof(IPGFuncionariosDbContext))]
    partial class IPGFuncionariosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IPG_Funcionarios.Models.Cargo", b =>
                {
                    b.Property<int>("CargoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeCargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(220)")
                        .HasMaxLength(220);

                    b.HasKey("CargoID");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Escola", b =>
                {
                    b.Property<int>("EscolaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(180)")
                        .HasMaxLength(180);

                    b.HasKey("EscolaID");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Escola");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Feriaaaa", b =>
                {
                    b.Property<int>("FeriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuncionarioForeignKey")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorForeignKey")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("TipoFeria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeriaID");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Feriaaaa");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascionento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Tarefas_ProfessorID")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FuncionarioId");

                    b.HasIndex("Tarefas_ProfessorID");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Professor", b =>
                {
                    b.Property<int>("ProfessorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartamentoForeignKey")
                        .HasColumnType("int");

                    b.Property<int?>("DepartamentosDepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gabinete")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("Tarefas_ProfessorID")
                        .HasColumnType("int");

                    b.HasKey("ProfessorId");

                    b.HasIndex("DepartamentosDepartamentoId");

                    b.HasIndex("Tarefas_ProfessorID");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Servico", b =>
                {
                    b.Property<int>("ServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("ServicoId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Tarefa", b =>
                {
                    b.Property<int>("TarefaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("FuncionarioForeignKey")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionariosFuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("ProfessorForeignKey")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessoresProfessorId")
                        .HasColumnType("int");

                    b.Property<int?>("Tarefas_ProfessorID")
                        .HasColumnType("int");

                    b.HasKey("TarefaID");

                    b.HasIndex("FuncionariosFuncionarioId");

                    b.HasIndex("ProfessoresProfessorId");

                    b.HasIndex("Tarefas_ProfessorID");

                    b.ToTable("Tarefa");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Tarefas_Professor", b =>
                {
                    b.Property<int>("Tarefas_ProfessorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Tarefas_ProfessorID");

                    b.ToTable("Tarefas_Professor");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Escola", b =>
                {
                    b.HasOne("IPG_Funcionarios.Models.Funcionario", null)
                        .WithMany("Escolas")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Feriaaaa", b =>
                {
                    b.HasOne("IPG_Funcionarios.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("IPG_Funcionarios.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Funcionario", b =>
                {
                    b.HasOne("IPG_Funcionarios.Models.Tarefas_Professor", "Tarefas")
                        .WithMany()
                        .HasForeignKey("Tarefas_ProfessorID");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Professor", b =>
                {
                    b.HasOne("IPG_Funcionarios.Models.Departamento", "Departamentos")
                        .WithMany("Professores")
                        .HasForeignKey("DepartamentosDepartamentoId");

                    b.HasOne("IPG_Funcionarios.Models.Tarefas_Professor", null)
                        .WithMany("Professors")
                        .HasForeignKey("Tarefas_ProfessorID");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Servico", b =>
                {
                    b.HasOne("IPG_Funcionarios.Models.Funcionario", null)
                        .WithMany("Servicos")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("IPG_Funcionarios.Models.Tarefa", b =>
                {
                    b.HasOne("IPG_Funcionarios.Models.Funcionario", "Funcionarios")
                        .WithMany()
                        .HasForeignKey("FuncionariosFuncionarioId");

                    b.HasOne("IPG_Funcionarios.Models.Professor", "Professores")
                        .WithMany("Tarefas")
                        .HasForeignKey("ProfessoresProfessorId");

                    b.HasOne("IPG_Funcionarios.Models.Tarefas_Professor", null)
                        .WithMany("Tarefas")
                        .HasForeignKey("Tarefas_ProfessorID");
                });
#pragma warning restore 612, 618
        }
    }
}
