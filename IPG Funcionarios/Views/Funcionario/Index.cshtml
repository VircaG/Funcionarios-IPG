@model PaginacaoViewModel<IPG_Funcionarios.Models.Funcionario>

@{
    ViewData["Title"] = "Index";
}

<h2>Estudantes</h2>
<p>
    <a asp-action="Create">Criar Novo Estudante</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Procurar por nome : <input type="text" name="filtro" value="@ViewData["filtroAtual"]" />
            <input type="submit" value="Procurar" class="btn btn-default" /> |
            <a asp-action="Index">Retornar para lista</a>
        </p>
    </div>
</form>

<div class="row">
    <div class="col">
        <div class="card">
            <h4 class="card-title">Lista dos Funcionarios</h4>
            <div class="table-responsive">
                <table class="table">

                    <thead>
                        <tr>
                            <th>
                                <a asp-action="Index" asp-route-ordem="@ViewData["NomeParm"]" asp-route-filtroAtual="@ViewData["filtroAtual"]">Nome</a>
                            </th>
                            <th> Nome </th>
                            <th> Telefone </th>
                            <th> Email </th>
                            <th> Genero </th>
                            <th> Morada </th>
                            <th>
                                <a asp-action="Index" asp-route-ordem="@ViewData["DataParm"]" asp-route-filtroAtual="@ViewData["filtroAtual"]">Data de Nascimento</a>
                            </th>
                            <th> DataNascionento </th>
                            <th> &nbsp; </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Nome)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Telefone)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Genero)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Morada)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataNascionento)
                            </td>
                            
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.FuncionarioId" class="badge badge-pill badge-warning">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.FuncionarioId" class="badge badge-pill badge-info">Details</a>
                                <a asp-action="Delete" asp-route-id="@item.FuncionarioId" class="badge badge-pill badge-danger">Delete</a>


                        </tr>

                        }

                    </tbody>
                </table>
                @{
                    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                }

                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-center">
                        <li class="page-item disabled">
                            <a asp-action="Index"
                               asp-route-ordem="@ViewData["ordemAtual"]"
                               asp-route-pagina="@(Model.PageIndex - 1)"
                               asp-route-filtroAtual="@ViewData["filtroAtual"]"
                               class="btn btn-default @prevDisabled">
                                Anterior
                            </a>
                        </li>
                        <li class="page-item"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item">
                            <a asp-action="Index"
                               asp-route-ordem="@ViewData["ordemAtual"]"
                               asp-route-pagina="@(Model.PageIndex + 1)"
                               asp-route-filtroAtual="@ViewData["filtroAtual"]"
                               class="btn btn-default @nextDisabled">
                                Próximo
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>

    <div class="col">
        <div class="ctrl">
            <a asp-controller="Home" asp-action="" class="badge badge-pill badge-info">Voltar</a>
            <br /><br />
            <a asp-action="Create" class="badge badge-pill badge-info">Adicionar</a>
            <div>
                <a asp-action="Index" asp-route-order="Nome" class="badge badge-pill badge-dark mt-3">Ordenar o nome</a>
            </div>
        </div>
    </div>
</div>

<style>
    .pagination,
    .jsgrid .jsgrid-pager {
        overflow-x: hidden;
        margin-top: 40px;
    }
</style>



